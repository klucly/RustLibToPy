py_traits = {'list': {'TryFrom<&[T]>', 'Extend<T>', 'From<CString>', 'From<[bool; LANES]>', 'IntoIterator', 'Ord', "From<Cow<'a, [T]>>", 'From<&str>', 'PartialEq<Vec<U, A2>>', 'Borrow<[T]>', 'From<[u16; 8]>', 'AsMut<[T]>', 'From<&mut [T]>', 'Debug', "Extend<&'a T>", 'From<BinaryHeap<T>>', "TryFrom<&'a mut [T]>", 'TryFrom<Box<[T], Global>>', 'From<[T; N]>', 'BorrowMut<[T]>', 'From<Mask<T, LANES>>', 'From<String>', 'AsRef<[T; LANES]>', "From<&'a Vec<T, Global>>", 'From<Vec<NonZeroU8, Global>>', 'From<&[T]>', 'PartialEq<[U; N]>', 'PartialOrd<[T; N]>', 'PartialEq<&[B]>', 'AsRef<[T]>', 'Eq', 'PartialEq<&[U]>', 'Clone', 'PartialEq<[A; N]>', 'AsMut<Vec<T, A>>', 'Copy', 'TryFrom<&mut [T]>', 'Drop', 'Hash', 'Default', 'PartialOrd<Vec<T, A>>', 'Index<I>', 'PartialEq<&mut [U]>', 'From<Vec<T, A>>', 'From<[(K, V); N]>', 'IndexMut<I>', 'Write', 'FromIterator<T>', "TryFrom<&'a [T]>", 'AsMut<[T; LANES]>', "Pattern<'a>", 'From<[u8; 16]>', 'Deref', 'PartialEq<[B; N]>', 'SlicePattern', 'PartialEq<[B]>', 'DerefMut', 'From<Box<[T], A>>', 'PartialEq<Vec<U, A>>', 'From<[u8; 4]>', 'PartialEq<&mut [B]>', 'AsRef<Vec<T, A>>', 'TryFrom<Vec<T, Global>>', 'PartialEq<[U]>', 'From<VecDeque<T, A>>', 'From<Simd<T, LANES>>', 'TryFrom<Vec<T, A>>', 'PartialEq<&mut [U; N]>', 'From<[T; LANES]>', 'PartialEq<&[U; N]>', 'From<Vec<T, Global>>'}, 'bool': {'Copy', 'BitOrAssign<bool>', 'Hash', 'Default', 'BitAnd<bool>', 'PartialOrd<bool>', 'Ord', 'Not', 'FromStr', 'BitXor<&bool>', 'Display', 'BitOr<Mask<T, LANES>>', 'From<bool>', 'BitAnd<Mask<T, LANES>>', 'BitXor<bool>', 'ToString', 'BitOrAssign<&bool>', 'BitOr<bool>', 'BitAnd<&bool>', 'BitOr<&bool>', 'BitAndAssign<&bool>', 'BitXorAssign<bool>', 'BitAndAssign<bool>', 'BitXorAssign<&bool>', 'BitXor<Mask<T, LANES>>', 'Eq', 'PartialEq<bool>', 'Clone', 'Debug'}, 'str': {"Extend<Cow<'a, str>>", 'PartialEq<char>', 'Ord', 'IndexMut<RangeInclusive<usize>>', 'IndexMut<RangeTo<usize>>', 'Index<RangeToInclusive<usize>>', "From<Cow<'a, str>>", "From<&'a String>", 'SliceIndex<str>', 'ToOwned', 'PartialEq<String>', "FromIterator<&'b str>", "PartialEq<&'b str>", 'From<&str>', "FromIterator<&'a char>", 'PartialEq<OsString>', "Extend<&'a char>", 'Index<RangeFrom<usize>>', 'Step', 'Debug', 'Extend<Box<str, Global>>', 'From<&String>', 'From<String>', 'From<&mut str>', 'ToString', 'FromIterator<char>', 'TryFrom<u32>', 'AsRef<Path>', 'IndexMut<RangeFrom<usize>>', "FromIterator<&'a str>", 'PartialEq<str>', 'IndexMut<RangeToInclusive<usize>>', 'AsRef<OsStr>', 'StructuralPartialEq', 'Eq', 'AsRef<[u8]>', 'Index<Range<usize>>', 'Clone', 'BorrowMut<str>', "From<Cow<'_, str>>", 'Copy', 'Extend<String>', 'Extend<char>', 'Hash', 'Default', "AddAssign<&'a str>", 'Index<I>', 'IndexMut<RangeFull>', 'AddAssign<&str>', 'AsciiExt', 'AsRef<str>', 'Display', 'Concat<str>', 'IndexMut<I>', "PartialEq<&'a str>", 'Index<RangeTo<usize>>', 'Write', 'PartialEq<&str>', 'From<char>', 'From<Box<str, Global>>', "FromIterator<Cow<'a, str>>", 'ToSocketAddrs', "Pattern<'a>", 'StructuralEq', "PartialEq<Cow<'a, str>>", 'AsMut<str>', 'Deref', 'DerefMut', 'FromIterator<Box<str, Global>>', '!Error', 'From<u8>', 'Borrow<str>', "Add<&'a str>", "Extend<&'a str>", 'PartialOrd<str>', 'FromStr', 'TryFrom<char>', 'FromIterator<String>', 'Index<RangeInclusive<usize>>', 'IndexMut<Range<usize>>', 'Add<&str>', 'PartialOrd<char>', 'Index<RangeFull>', 'TrustedStep', "From<&'a str>", 'PartialEq<OsStr>', 'Join<&str>', 'PartialOrd<String>'}, 'float': {'AddAssign<&f64>', 'RemAssign<&f32>', 'Sub<&f32>', 'Rem<f64>', 'RemAssign<f32>', 'Mul<f32>', "Sum<&'a f32>", 'FloatToInt<u8>', 'From<i32>', 'MulAssign<&f64>', 'UpperExp', 'Product<f64>', 'FloatToInt<i64>', 'From<i8>', 'Sub<f64>', 'Rem<&f64>', 'Debug', 'SubAssign<&f64>', 'Div<f64>', 'Mul<f64>', 'Rem<f32>', "Product<&'a f64>", 'DivAssign<&f32>', 'Sum<f32>', "Product<&'a f32>", 'From<f32>', 'SubAssign<&f32>', 'SimdElement', 'FloatToInt<u16>', 'From<i16>', 'FloatToInt<u32>', 'Mul<&f32>', 'Sub<&f64>', 'Mul<&f64>', 'FloatToInt<i128>', 'From<u16>', 'RemAssign<&f64>', 'AddAssign<&f32>', 'From<u32>', 'FloatToInt<usize>', 'DivAssign<f64>', 'FloatToInt<i32>', 'FloatToInt<isize>', 'AddAssign<f64>', 'Clone', 'Sum<f64>', 'Add<f32>', 'Copy', 'PartialOrd<f64>', 'Div<f32>', 'Div<&f64>', 'PartialOrd<f32>', 'Default', 'MulAssign<f32>', 'Display', 'Div<&f32>', 'FloatToInt<i16>', 'MulAssign<&f32>', 'RemAssign<f64>', 'Product<f32>', 'AddAssign<f32>', 'FloatToInt<i8>', 'Neg', 'MulAssign<f64>', 'From<u8>', 'DivAssign<&f64>', 'Add<&f64>', 'PartialEq<f64>', 'SubAssign<f32>', 'FromStr', 'FloatToInt<u128>', 'LowerExp', 'PartialEq<f32>', 'FloatToInt<u64>', 'Rem<&f32>', 'DivAssign<f32>', 'Add<f64>', 'SubAssign<f64>', 'Sub<f32>', 'Add<&f32>', "Sum<&'a f64>", 'From<bool>'}, 'int': {'BitXor<i8>', 'BitAndAssign<i128>', 'BitAnd<u64>', 'BitXorAssign<u64>', 'Rem<&isize>', "Product<&'a u8>", 'ShlAssign<&i128>', 'ShlAssign<&isize>', 'BitOr<NonZeroU16>', 'Div<NonZeroU32>', 'BitOr<i128>', 'BitAndAssign<&u128>', 'From<Ipv6Addr>', 'DivAssign<&i16>', 'Rem<NonZeroU128>', 'ShlAssign<&i8>', 'Div<isize>', 'ShlAssign<i8>', 'ShrAssign<&i128>', "Product<&'a u64>", 'MulAssign<u32>', 'SubAssign<&i8>', 'BitAnd<i32>', 'BitAndAssign<isize>', 'Div<&u64>', 'BitAndAssign<i32>', 'AddAssign<&u16>', 'MulAssign<&u128>', 'Div<NonZeroU128>', 'Rem<u32>', 'UpperHex', 'Sub<&i8>', "Sum<&'a i16>", "Sum<&'a isize>", 'BitAnd<&u128>', 'ShlAssign<i32>', 'Add<u32>', 'SubAssign<u32>', 'BitXor<&isize>', 'TryFrom<u128>', 'Rem<&i128>', 'BitAndAssign<i16>', 'ShlAssign<&i16>', 'BitXorAssign<u32>', 'DivAssign<&u64>', 'BitAndAssign<&i64>', 'MulAssign<u16>', 'BitOrAssign<&i16>', 'BitXorAssign<usize>', 'BitAnd<&isize>', 'Display', 'ShlAssign<&u64>', 'From<NonZeroIsize>', 'AddAssign<usize>', 'FloatToInt<i8>', 'PartialEq<isize>', 'ShrAssign<usize>', 'BitAndAssign<&u32>', 'ShrAssign<u64>', 'BitAnd<u128>', 'Shl<i64>', 'BitAndAssign<&u16>', 'BitXor<&usize>', 'Shr<&i16>', 'AddAssign<&i128>', 'Mul<&i32>', 'AddAssign<u64>', 'BitXorAssign<&u16>', 'BitOr<&i128>', 'Add<&i32>', "Sum<&'a i32>", 'BitXorAssign<i16>', 'BitXor<usize>', 'Shl<u128>', 'Rem<&u64>', 'From<NonZeroI32>', 'Div<i8>', 'Product<u64>', 'Rem<NonZeroU32>', 'Add<u16>', 'TryFrom<i64>', 'MulAssign<&u8>', 'Shl<&usize>', 'AddAssign<&i16>', 'SubAssign<i128>', 'Product<usize>', 'BitOrAssign<i16>', 'Mul<&usize>', 'BitAnd<i8>', 'DivAssign<&i8>', 'BitOr<&isize>', 'SubAssign<u128>', 'From<NonZeroU16>', 'BitOrAssign<u128>', 'From<i32>', 'BitXor<&i32>', 'From<Ipv4Addr>', 'ShlAssign<u32>', 'Product<u8>', 'From<i8>', 'FloatToInt<i64>', 'Div<&usize>', 'BitAnd<u8>', 'Div<NonZeroUsize>', 'Sub<&isize>', 'ShrAssign<i64>', 'BitXor<i32>', 'BitOrAssign<i8>', 'BitOr<NonZeroI8>', 'Shl<&u8>', 'Shr<u16>', 'BitOr<&u32>', 'AddAssign<i32>', 'Mul<&u32>', 'RemAssign<&u32>', 'DivAssign<u8>', 'BitXorAssign<&u64>', 'BitOrAssign<&u16>', 'DivAssign<&u8>', 'BitXor<u8>', 'Sub<&u16>', 'Sub<&u32>', 'Sum<usize>', 'BitXorAssign<&i64>', 'Mul<u64>', 'Add<&usize>', 'BitAnd<&u16>', 'BitXor<&i8>', 'TryFrom<usize>', 'TryFrom<i8>', 'DivAssign<&usize>', 'Rem<i16>', 'BitOrAssign<usize>', 'DivAssign<i16>', 'ShlAssign<&i64>', 'DivAssign<&u128>', 'BitXor<i128>', 'Mul<u16>', 'SliceIndex<[T]>', 'BitOrAssign<u64>', 'Div<u16>', 'FromStr', 'BitAndAssign<i8>', 'From<u128>', 'FloatToInt<u128>', 'DivAssign<u128>', 'SubAssign<usize>', 'BitXor<u32>', 'BitOr<isize>', 'RemAssign<i8>', 'BitOrAssign<&u128>', 'MulAssign<&u16>', 'BitAndAssign<&usize>', 'Sub<&u8>', 'Shr<usize>', 'AddAssign<i64>', 'SubAssign<&i64>', 'BitXorAssign<i64>', 'Div<u128>', 'SubAssign<&u8>', 'SubAssign<&i128>', 'ShrAssign<isize>', 'Add<&i128>', 'Mul<i64>', 'BitOr<NonZeroU32>', 'Shr<&i8>', 'Sub<&u64>', 'BitXorAssign<&u128>', 'BitOr<i8>', 'Sub<i64>', 'BitOr<u32>', "Sum<&'a i128>", 'DivAssign<usize>', 'SubAssign<i64>', 'PartialEq<i16>', 'ShlAssign<&i32>', 'AddAssign<isize>', 'Rem<&u32>', 'From<u64>', 'ShrAssign<&i32>', 'BitAndAssign<u32>', 'BitXor<i64>', 'BitAndAssign<&u8>', 'BitXor<&u64>', 'Shr<i128>', 'PartialOrd<usize>', 'AddAssign<&u32>', 'Rem<&i16>', 'Shr<&u64>', 'FloatToInt<usize>', 'Sub<i32>', 'Rem<isize>', 'Sub<u64>', 'Sub<&i16>', 'Rem<&u8>', 'Sub<isize>', 'Mul<&u64>', 'BitOr<usize>', 'Hash', 'BitXorAssign<&usize>', 'Mul<u128>', 'BitAnd<&u8>', "Sum<&'a i64>", 'BitAndAssign<u16>', 'RemAssign<u8>', 'ShlAssign<u8>', 'Div<i128>', 'Rem<u16>', 'ShrAssign<u32>', 'BitOrAssign<&isize>', 'DivAssign<&isize>', 'Div<i32>', 'From<usize>', 'Neg', 'DivAssign<u64>', 'Shr<&usize>', 'From<u8>', 'Add<&u32>', 'Rem<u8>', 'TryFrom<isize>', 'BitOr<u8>', 'LowerExp', 'BitAnd<&i128>', 'BitAnd<u16>', 'RemAssign<i128>', 'DivAssign<&u16>', "Product<&'a u16>", 'FloatToInt<u64>', 'RemAssign<&i128>', 'Add<i16>', 'ShrAssign<&i64>', 'BitAnd<&i64>', 'PartialOrd<u8>', 'RemAssign<&i64>', 'Mul<&i8>', 'Add<u64>', 'PartialOrd<i16>', 'Sub<&u128>', 'Sum<u16>', 'Rem<NonZeroU64>', 'BitOr<&u128>', 'PartialOrd<i8>', "Product<&'a usize>", 'AddAssign<&u128>', 'LowerHex', 'Shr<&u8>', 'From<i64>', 'Shl<u32>', 'Shl<&i64>', 'BitXor<&i64>', 'SubAssign<&isize>', 'BitOrAssign<u32>', 'Mul<Duration>', 'Debug', "Product<&'a u32>", 'BitOr<NonZeroU128>', 'Mul<u8>', 'ShlAssign<u64>', 'Add<&i16>', 'Div<usize>', 'Mul<&i16>', 'DivAssign<i32>', 'DivAssign<u32>', 'DivAssign<i64>', "Product<&'a u128>", 'FloatToInt<u16>', 'MulAssign<i64>', 'Rem<&u16>', 'BitAndAssign<&i16>', 'Sum<u32>', 'Shl<u8>', 'Shl<&i8>', 'From<NonZeroI128>', 'FloatToInt<i128>', 'Add<i64>', 'Rem<&i64>', 'BitOr<&i64>', 'Div<&i64>', 'Copy', 'SubAssign<i32>', 'BitAnd<&u32>', 'MulAssign<&u64>', 'Shr<u64>', 'SubAssign<&u64>', 'RemAssign<isize>', 'BitXor<u64>', 'BitXorAssign<i128>', 'AddAssign<&i8>', 'PartialOrd<u128>', 'SubAssign<u16>', "Sum<&'a u32>", 'Mul<isize>', 'BitOr<u16>', 'MulAssign<&i64>', 'Shl<&u32>', 'Shl<&u16>', 'Shl<i32>', "Sum<&'a u64>", 'Shr<&u32>', 'MulAssign<isize>', 'BitOrAssign<&usize>', 'BitAnd<i16>', 'AddAssign<&usize>', 'Rem<usize>', 'AddAssign<&u64>', 'BitOrAssign<&u32>', 'Shr<u128>', 'ShrAssign<&u128>', 'ShrAssign<&u8>', 'RemAssign<&usize>', "Product<&'a isize>", 'Add<u8>', 'PartialEq<i8>', 'BitXorAssign<u16>', 'RemAssign<usize>', 'From<bool>', 'Sub<usize>', 'Mul<i16>', 'TryFrom<i32>', 'BitAndAssign<u128>', 'Shr<&u128>', 'Rem<u64>', 'BitXorAssign<&isize>', 'BitOrAssign<u16>', 'RemAssign<&i32>', 'BitXor<i16>', 'Rem<i64>', 'Div<&i128>', 'PartialEq<u16>', 'RemAssign<&u64>', "Sum<&'a u128>", 'BitXorAssign<i32>', 'BitOrAssign<&u8>', 'Add<isize>', 'IndexMut<usize>', 'Shl<u16>', 'Shl<u64>', 'RemAssign<i32>', 'TryFrom<u16>', 'Add<i128>', 'BitOr<NonZeroI32>', 'Shr<i32>', 'BitOrAssign<&i128>', 'MulAssign<usize>', 'ShrAssign<&u64>', 'Mul<&i128>', 'Shr<i64>', "Sum<&'a i8>", 'BitOrAssign<u8>', 'Product<i16>', 'FloatToInt<u32>', 'ShrAssign<u8>', 'From<u16>', 'Shr<u8>', 'BitXorAssign<&i16>', 'BitOr<NonZeroU64>', 'Add<i32>', 'Binary', 'BitAnd<&i16>', 'Rem<NonZeroU8>', 'BitOr<i64>', 'Rem<i128>', 'Product<i32>', 'BitOr<&u8>', 'DivAssign<&i128>', 'TryFrom<u8>', 'Div<u32>', 'BitXorAssign<isize>', 'BitOr<NonZeroI128>', 'Shr<i8>', 'BitXorAssign<&u32>', 'Sub<i128>', 'From<char>', 'PartialEq<i32>', 'BitAnd<u32>', 'BitAndAssign<&u64>', 'Div<u8>', 'Shr<&i32>', 'ShlAssign<&usize>', 'DivAssign<&i32>', 'From<NonZeroI8>', 'Div<i64>', 'ShlAssign<i16>', 'Product<u16>', 'Sub<i16>', 'Rem<&i8>', 'Sub<&i64>', 'Mul<usize>', 'ShrAssign<i128>', "Sum<&'a u8>", 'MulAssign<&u32>', 'BitOr<NonZeroU8>', 'From<NonZeroI16>', 'AddAssign<i8>', 'BitOr<i32>', 'BitXor<&u8>', 'ShlAssign<&u8>', 'Add<u128>', 'Sum<i8>', 'Shr<&i64>', 'Rem<NonZeroU16>', 'MaskElement', 'Sum<isize>', 'PartialOrd<u16>', 'Rem<u128>', 'SubAssign<u8>', 'BitOr<NonZeroI16>', "Sum<&'a usize>", 'RemAssign<&u16>', 'Mul<&u16>', 'BitXor<u128>', 'Div<&isize>', 'AddAssign<&u8>', 'ShlAssign<&u16>', 'SubAssign<isize>', 'DivAssign<&i64>', 'Index<usize>', 'Product<isize>', 'RemAssign<i16>', 'ShrAssign<&u32>', 'BitAndAssign<&isize>', 'BitAnd<&usize>', 'Add<usize>', 'ShlAssign<isize>', 'BitXorAssign<&i128>', 'Div<&u16>', 'Shl<&isize>', 'MulAssign<&i16>', 'Not', 'Product<i128>', 'Add<&u64>', 'SimdElement', 'Mul<i128>', 'BitAnd<&i32>', 'ShrAssign<&usize>', 'PartialEq<i64>', 'Sum<i128>', 'PartialEq<u8>', 'ShlAssign<u16>', 'Shr<isize>', 'BitOrAssign<&i8>', 'SubAssign<&i32>', 'AddAssign<u16>', "Product<&'a i8>", 'Eq', "Product<&'a i128>", 'ShlAssign<usize>', 'MulAssign<i16>', 'Shr<&isize>', 'Mul<&u128>', 'From<NonZeroU64>', 'Shl<usize>', 'Default', 'Mul<&u8>', 'MulAssign<i8>', 'BitOr<&u64>', 'From<NonZeroI64>', 'Shl<isize>', 'Rem<i32>', 'MulAssign<u128>', 'BitOrAssign<i128>', 'BitXorAssign<u128>', 'ShrAssign<&isize>', 'RemAssign<u16>', 'BitOr<i16>', 'From<isize>', 'Sub<i8>', 'Div<i16>', 'Rem<i8>', 'BitXorAssign<&i8>', 'Shl<i8>', 'MulAssign<&isize>', 'BitAndAssign<u8>', 'TryFrom<char>', 'RemAssign<i64>', 'Sum<u64>', 'From<Alignment>', "Sum<&'a u16>", 'Div<&u32>', 'From<NonZeroU128>', "Product<&'a i16>", 'BitAndAssign<u64>', 'AddAssign<i128>', 'BitXor<&i128>', 'RemAssign<&i16>', 'BitOrAssign<&u64>', 'ShlAssign<&u32>', 'MulAssign<u8>', 'PartialOrd<isize>', 'BitOr<NonZeroIsize>', 'Rem<&u128>', 'PartialOrd<i32>', 'SubAssign<u64>', 'Shr<i16>', 'ShrAssign<&i16>', 'Ord', 'Div<&i32>', 'Product<i8>', 'PartialEq<u64>', 'Shl<i16>', 'BitXor<&u16>', 'RemAssign<&u8>', 'SubAssign<&u32>', 'Shl<&i128>', 'Rem<NonZeroUsize>', 'From<NonZeroU32>', 'RemAssign<&i8>', 'Add<&isize>', 'AddAssign<u8>', 'Sum<u128>', 'Product<i64>', 'ShlAssign<&u128>', 'Add<&u16>', 'BitXorAssign<u8>', 'Sum<i16>', 'BitOr<&u16>', 'TryFrom<u64>', 'Sub<u32>', 'Rem<&i32>', 'ShrAssign<i16>', 'ShrAssign<u16>', 'AddAssign<&i32>', 'TryFrom<u32>', 'From<i16>', 'BitXor<&i16>', 'AddAssign<&isize>', 'ShrAssign<i32>', 'SubAssign<&usize>', 'From<u32>', 'BitAndAssign<&i8>', 'MulAssign<u64>', 'AddAssign<i16>', 'ShrAssign<&i8>', 'BitAnd<isize>', 'Sum<i32>', 'FloatToInt<isize>', 'Clone', 'Shl<i128>', 'Shl<&u128>', 'BitXorAssign<&i32>', 'DivAssign<i8>', 'Div<&u128>', 'Add<&u8>', 'BitOrAssign<i64>', 'AddAssign<u128>', 'AsciiExt', 'Add<i8>', 'FloatToInt<i16>', 'DivAssign<u16>', 'BitOr<&i8>', 'BitAndAssign<i64>', 'BitOrAssign<i32>', 'Product<u32>', 'RemAssign<u128>', 'BitOr<&usize>', 'Sub<&i32>', 'Mul<u32>', 'BitOrAssign<isize>', 'Add<&i8>', 'BitAnd<&u64>', 'BitXor<isize>', 'Mul<&isize>', 'Div<NonZeroU64>', 'PartialEq<i128>', 'BitXorAssign<&u8>', 'Sub<&usize>', 'Shr<&u16>', 'BitXorAssign<i8>', 'BitOr<NonZeroI64>', 'Sum<i64>', 'SubAssign<i16>', 'BitAnd<i64>', 'ShlAssign<i64>', 'BitAnd<i128>', 'ShrAssign<i8>', 'PartialOrd<i64>', 'Div<&u8>', 'BitAndAssign<&i32>', "Product<&'a i32>", 'DivAssign<&u32>', 'MulAssign<i32>', 'ShrAssign<&u16>', 'FloatToInt<u8>', 'UpperExp', 'BitXor<&u32>', 'PartialEq<usize>', 'BitAnd<usize>', 'Step', 'PartialEq<u32>', 'BitOr<u128>', 'ShrAssign<u128>', 'ShlAssign<i128>', 'BitAnd<&i8>', 'DivAssign<i128>', 'SubAssign<&u16>', 'TryFrom<i128>', 'BitXor<u16>', 'BitXor<&u128>', 'PartialOrd<i128>', 'Shl<&i32>', 'ToString', 'SubAssign<&i16>', 'AddAssign<&i64>', 'Mul<i8>', 'Div<NonZeroU16>', 'AddAssign<u32>', 'PartialOrd<u32>', 'Sub<&i128>', 'Add<&i64>', 'RemAssign<&u128>', 'Mul<&i64>', 'FloatToInt<i32>', 'MulAssign<&i128>', 'RemAssign<&isize>', 'BitOrAssign<&i64>', 'From<NonZeroU8>', 'Mul<i32>', 'MulAssign<&usize>', 'BitOrAssign<&i32>', 'MulAssign<&i8>', 'Add<&u128>', 'PartialEq<u128>', 'Sub<u128>', 'MulAssign<&i32>', 'ShlAssign<u128>', 'Shl<&u64>', 'TryFrom<i16>', "Product<&'a i64>", 'BitAndAssign<&i128>', 'BitOr<NonZeroUsize>', 'Div<&i8>', 'Div<NonZeroU8>', 'Shl<&i16>', 'BitOr<&i16>', 'MulAssign<i128>', 'Rem<&usize>', 'Shr<u32>', 'SubAssign<i8>', 'RemAssign<u32>', 'Sub<u8>', 'Div<&i16>', 'RemAssign<u64>', 'DivAssign<isize>', 'Sum<u8>', 'BitOr<u64>', 'From<NonZeroUsize>', 'SubAssign<&u128>', 'Product<u128>', 'TrustedStep', 'BitOr<&i32>', 'Octal', 'PartialOrd<u64>', 'Shr<&i128>', 'BitAndAssign<usize>', 'Div<u64>', 'Sub<u16>'}, 'bytes': {'PartialEq<[A; N]>', 'TryFrom<&[T]>', 'TryFrom<&mut [T]>', 'Hash', 'IntoIterator', 'Default', 'Index<I>', 'PartialEq<&mut [U]>', 'Ord', "From<&'a [T]>", 'From<Vec<T, A>>', 'AsciiExt', 'IndexMut<I>', 'Concat<str>', 'AsRef<[u8]>', 'ToOwned', 'Write', 'From<Box<str, A>>', "TryFrom<&'a [T]>", 'Borrow<[T]>', 'ToSocketAddrs', 'AsMut<[T]>', "Pattern<'a>", "From<Cow<'_, [T]>>", 'From<&mut [T]>', 'SlicePattern', 'PartialEq<[B]>', 'Debug', 'BufRead', 'SliceIndex<[T]>', 'Join<&T>', 'PartialEq<Vec<U, A>>', 'Concat<T>', "TryFrom<&'a mut [T]>", 'From<[T; N]>', 'BorrowMut<[T]>', 'PartialOrd<[T]>', 'From<&[T]>', 'Join<&[T]>', 'PartialEq<&mut [B]>', 'FromIterator<I>', "From<&'data mut [MaybeUninit<u8>]>", 'PartialEq<[U]>', "From<&'data mut [u8]>", 'Read', 'Join<&str>', 'PartialEq<&[B]>', 'Join<&OsStr>', 'AsRef<[T]>', 'Eq', 'PartialEq<&[U]>', 'Clone'}, 'tuple': {'Copy', 'SliceIndex<[T]>', 'Hash', 'Default', 'Ord', 'FromIterator<(K, V)>', 'From<(I, u16)>', 'Extend<(K, V)>', 'RangeBounds<T>', 'ToSocketAddrs', 'PartialEq<(T,)>', 'Extend<(A, B)>', 'PartialOrd<(T,)>', 'Eq', "Extend<(&'a K, &'a V)>", 'Clone', 'Debug'}}